definitions:
  controllers.bookingInput:
    properties:
      booking_type_id:
        type: integer
      cars_id:
        type: integer
      customer_id:
        type: integer
      driver_id:
        type: integer
      end_rent:
        type: string
      finished:
        type: boolean
      start_rent:
        type: string
    required:
    - booking_type_id
    - cars_id
    - customer_id
    - end_rent
    - start_rent
    type: object
  controllers.bookingTypeInput:
    properties:
      booking_type:
        type: string
      description:
        type: string
    required:
    - booking_type
    - description
    type: object
  controllers.carsInput:
    properties:
      daily_rent:
        type: integer
      name:
        type: string
      stock:
        type: integer
    required:
    - daily_rent
    - name
    - stock
    type: object
  controllers.customerInput:
    properties:
      membership_id:
        type: integer
      name:
        type: string
      nik:
        type: integer
      phone_number:
        type: string
    required:
    - name
    - nik
    - phone_number
    type: object
  controllers.driverIncentiveInput:
    properties:
      booking_id:
        type: integer
      incentive:
        type: integer
    required:
    - booking_id
    - incentive
    type: object
  controllers.driverInput:
    properties:
      daily_cost:
        type: integer
      name:
        type: string
      nik:
        type: integer
      phone_number:
        type: string
    required:
    - daily_cost
    - name
    - nik
    - phone_number
    type: object
  controllers.membershipInput:
    properties:
      discount:
        type: integer
      membership_name:
        type: string
    required:
    - discount
    - membership_name
    type: object
  models.Booking:
    properties:
      booking_type:
        $ref: '#/definitions/models.BookingType'
      booking_type_id:
        type: integer
      cars:
        $ref: '#/definitions/models.Cars'
      cars_id:
        type: integer
      created_at:
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      customer_id:
        type: integer
      discount:
        type: integer
      driver:
        $ref: '#/definitions/models.Driver'
      driver_id:
        type: integer
      end_rent:
        type: string
      finished:
        type: boolean
      id:
        type: integer
      start_rent:
        type: string
      total_cost:
        type: integer
      total_driver_cost:
        type: integer
      updated_at:
        type: string
    required:
    - booking_type_id
    - cars_id
    - customer_id
    - driver_id
    - end_rent
    - start_rent
    - total_cost
    type: object
  models.BookingType:
    properties:
      booking_type:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    required:
    - booking_type
    - description
    type: object
  models.Cars:
    properties:
      created_at:
        type: string
      daily_rent:
        type: integer
      id:
        type: integer
      name:
        type: string
      stock:
        type: integer
      updated_at:
        type: string
    required:
    - daily_rent
    - name
    - stock
    type: object
  models.Customer:
    properties:
      created_at:
        type: string
      id:
        type: integer
      membership:
        $ref: '#/definitions/models.Membership'
      membership_id:
        type: integer
      name:
        type: string
      nik:
        type: integer
      phone_number:
        type: string
      updated_at:
        type: string
    required:
    - name
    - nik
    - phone_number
    type: object
  models.Driver:
    properties:
      created_at:
        type: string
      daily_cost:
        type: integer
      id:
        type: integer
      name:
        type: string
      nik:
        type: integer
      phone_number:
        type: string
      updated_at:
        type: string
    required:
    - name
    - nik
    - phone_number
    type: object
  models.DriverIncentive:
    properties:
      booking:
        $ref: '#/definitions/models.Booking'
      booking_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      incentive:
        type: integer
      updated_at:
        type: string
    required:
    - booking_id
    - incentive
    type: object
  models.Membership:
    properties:
      created_at:
        type: string
      discount:
        type: integer
      id:
        type: integer
      membership_name:
        type: string
      updated_at:
        type: string
    required:
    - discount
    - membership_name
    type: object
info:
  contact: {}
paths:
  /booking:
    get:
      description: Get a list of Booking.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Booking'
            type: array
      summary: Get All Booking.
      tags:
      - Booking
    post:
      description: Create a new Booking.
      parameters:
      - description: The body to create a new Booking
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.bookingInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
      summary: Create New Booking.
      tags:
      - Booking
  /booking/{id}:
    delete:
      description: Delete a Booking by id.
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one Booking.
      tags:
      - Booking
    get:
      description: Get a Booking by ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
      summary: Get Booking by ID.
      tags:
      - Booking
    patch:
      description: Update Booking by id.
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: string
      - description: The body to update an Booking
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.bookingInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
      summary: Update Booking.
      tags:
      - Booking
  /booking/{id}/detail:
    get:
      description: Get a Booking by ID with Detail.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Booking'
      summary: Get Booking by ID with Detail.
      tags:
      - Booking
  /bookingtype:
    get:
      description: Get a list of Booking Type.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BookingType'
            type: array
      summary: Get All Booking Type.
      tags:
      - Booking Type
    post:
      description: Create a new Booking Type.
      parameters:
      - description: The body to create a new Booking Type
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.bookingTypeInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookingType'
      summary: Create New Booking Type.
      tags:
      - Booking Type
  /bookingtype/{id}:
    delete:
      description: Delete a Booking Type by id.
      parameters:
      - description: BookingType ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one Booking Type.
      tags:
      - Booking Type
    get:
      description: Get a Booking Type by ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookingType'
      summary: Get Booking Type by ID.
      tags:
      - Booking Type
    patch:
      description: Update Booking Type by id.
      parameters:
      - description: BookingType ID
        in: path
        name: id
        required: true
        type: string
      - description: The body to update an Booking Type
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.bookingTypeInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookingType'
      summary: Update Booking Type.
      tags:
      - Booking Type
  /cars:
    get:
      description: Get a list of Cars.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Cars'
            type: array
      summary: Get All Cars.
      tags:
      - Cars
    post:
      description: Create a new Cars.
      parameters:
      - description: The body to create a new Cars
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.carsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cars'
      summary: Create New Cars.
      tags:
      - Cars
  /cars/{id}:
    delete:
      description: Delete a Cars by id.
      parameters:
      - description: Cars ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one cars.
      tags:
      - Cars
    get:
      description: Get a Cars by ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cars'
      summary: Get Cars by ID.
      tags:
      - Cars
    patch:
      description: Update Cars by id.
      parameters:
      - description: Cars ID
        in: path
        name: id
        required: true
        type: string
      - description: The body to update an Cars
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.carsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cars'
      summary: Update Cars.
      tags:
      - Cars
  /customer:
    get:
      description: Get a list of Customer.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
      summary: Get All Customer.
      tags:
      - Customer
    post:
      description: Create a new Customer.
      parameters:
      - description: The body to create a new Customer
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.customerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Create New Customer.
      tags:
      - Customer
  /customer/{id}:
    delete:
      description: Delete a Customer by id.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one customer.
      tags:
      - Customer
    get:
      description: Get a Customer by ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Get Customer by ID.
      tags:
      - Customer
    patch:
      description: Update Customer by id.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: string
      - description: The body to update an Customer
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.customerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
      summary: Update Customer.
      tags:
      - Customer
  /driver:
    get:
      description: Get a list of Driver.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Driver'
            type: array
      summary: Get All Driver.
      tags:
      - Driver
    post:
      description: Create a new Driver.
      parameters:
      - description: The body to create a new Driver
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.driverInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
      summary: Create New Driver.
      tags:
      - Driver
  /driver/{id}:
    delete:
      description: Delete a Driver by id.
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one driver.
      tags:
      - Driver
    get:
      description: Get a Driver by ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
      summary: Get Driver by ID.
      tags:
      - Driver
    patch:
      description: Update Driver by id.
      parameters:
      - description: Driver ID
        in: path
        name: id
        required: true
        type: string
      - description: The body to update an Driver
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.driverInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
      summary: Update Driver.
      tags:
      - Driver
  /driverincentive:
    get:
      description: Get a list of Driver Incentive.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DriverIncentive'
            type: array
      summary: Get All Driver Incentive.
      tags:
      - Driver Incentive
    post:
      description: Create a new Driver Incentive.
      parameters:
      - description: The body to create a new Driver Incentive
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.driverIncentiveInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DriverIncentive'
      summary: Create New Driver Incentive.
      tags:
      - Driver Incentive
  /driverincentive/{id}:
    delete:
      description: Delete a Driver Incentive by id.
      parameters:
      - description: DriverIncentive ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one Driver Incentive.
      tags:
      - Driver Incentive
    get:
      description: Get a Driver by ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Driver'
      summary: Get Driver by ID.
      tags:
      - Driver Incentive
    patch:
      description: Update Driver Incentive by id.
      parameters:
      - description: DriverIncentive ID
        in: path
        name: id
        required: true
        type: string
      - description: The body to update an Driver Incentive
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.driverIncentiveInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DriverIncentive'
      summary: Update Driver Incentive.
      tags:
      - Driver Incentive
  /membership:
    get:
      description: Get a list of Membership.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Membership'
            type: array
      summary: Get All Membership.
      tags:
      - Membership
    post:
      description: Create a new Membership.
      parameters:
      - description: The body to create a new Membership
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.membershipInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Membership'
      summary: Create New Membership.
      tags:
      - Membership
  /membership/{id}:
    delete:
      description: Delete a Membership by id.
      parameters:
      - description: Membership ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one Membership.
      tags:
      - Membership
    get:
      description: Get a Membership by ID.
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Membership'
      summary: Get Membership by ID.
      tags:
      - Membership
    patch:
      description: Update Membership by id.
      parameters:
      - description: Membership ID
        in: path
        name: id
        required: true
        type: string
      - description: The body to update an Membership
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.membershipInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Membership'
      summary: Update Membership.
      tags:
      - Membership
swagger: "2.0"
